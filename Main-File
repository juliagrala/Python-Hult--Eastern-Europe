########################################################################################################################################
                                                            #Import data from Excel
########################################################################################################################################

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

file='WDIW Dataset.xlsx'

worldData_df=pd.read_excel(file, index_col=0)

#CountryCode             = 'CountryCode'
CountryName             = 'CountryName'
HultRegion              = 'Hult Region'
CoolName                = 'Cool Name'
ElectricityAccessTotal  = 'ElectricityAccessTotal'
ElectricityRuralAccess  = 'ElectricityRuralAccess'
ElectricityUrbanAccess  = 'ElectricityUrbanAccess'
AdolescentFertility     = 'AdolescentFertility'
AgeDependencyTotal      = 'AgeDependencyTotal'
AgeDependencyOld        = 'AgeDependencyOld'
AgeDependencyYoung      = 'AgeDependencyYoung'
GDP_AgriForFish         = 'GDP_AgriForFish'
ArmedForces             = 'ArmedForces'
BirthRate               = 'BirthRate'
BirthSkilledStaff       = 'BirthSkilledStaff'
DeathRate               = 'DeathRate'
EducationPHD            = 'EducationPHD'
EducationBachelor       = 'EducationBachelor'
EducationMaster         = 'EducationMaster'
EducationLowerSecondary = 'EducationLowerSecondary'
EducationPostSecondary  = 'EducationPostSecondary'
EducationPrimary        = 'EducationPrimary'
EducationTertiary       = 'EducationTertiary'
EducationUpperSecondary = 'EducationUpperSecondary'
EmploymentAgriculture   = 'EmploymentAgriculture'
EmploymentIndustry      = 'EmploymentIndustry'
EmploymentServices      = 'EmploymentServices'
FertilityRate           = 'FertilityRate'
GDP                     = 'GDP'
GDPGrowth               = 'GDPGrowth'
GINI                    = 'GINI'
ExpendEducation         = 'ExpendEducation'
IncomeFourth            = 'IncomeFourth'
IncomeFifth             = 'IncomeFifth'
IncomeFirst             = 'IncomeFirst'
IncomeSecond            = 'IncomeSecond'
IncomeThird             = 'IncomeThird'
GDP_Industry            = 'GDP_Industry'
LifeExpectancy          = 'LifeExpectancy'
LiteracyAdult           = 'LiteracyAdult'
LiteracyYouth           = 'LiteracyYouth'
GDP_Merchandise         = 'GDP_Merchandise'
ExpendMilitary          = 'ExpendMilitary'
MobileSubs              = 'MobileSubs'
PovertyByHealthcare     = 'PovertyByHealthcare'
Population0_14          = 'Population0_14'
Population15_64         = 'Population15_64'
Population65            = 'Population65+'
PopulationDensity       = 'PopulationDensity'
PopulationGrowth        = 'PopulationGrowth'
PopulationLargestCity   = 'PopulationLargestCity'
PopulationSlums         = 'PopulationSlums'
PopulationFemale        = 'PopulationFemale'
PopulationMale          = 'PopulationMale'
PopulationTotal         = 'PopulationTotal'
Poverty_1               = 'Poverty_1.90'
Poverty_3               = 'Poverty_3.20'
Poverty_NationalLine    = 'Poverty_NationalLine'
HIV                     = 'HIV'
Undernourishment        = 'Undernourishment'
Underweight             = 'Underweight'
PopulationRural         = 'PopulationRural'
GDP_Services            = 'GDP_Services'
SurfaceArea             = 'SurfaceArea'
TaxRevenue              = 'TaxRevenue'
PopulationUrban         = 'PopulationUrban'
PopulationUrbanGrowth   = 'PopulationUrbanGrowth'

newColumns=[#CountryCode,
            CountryName, HultRegion, CoolName, ElectricityAccessTotal, ElectricityRuralAccess,\
            ElectricityUrbanAccess, AdolescentFertility, AgeDependencyTotal, AgeDependencyOld, AgeDependencyYoung, GDP_AgriForFish,\
            ArmedForces, BirthRate, BirthSkilledStaff, DeathRate, EducationPHD, EducationBachelor, \
            EducationMaster, EducationLowerSecondary, EducationPostSecondary, EducationPrimary, EducationTertiary, EducationUpperSecondary,\
            EmploymentAgriculture, EmploymentIndustry, EmploymentServices, FertilityRate, GDP, GDPGrowth,\
            GINI, ExpendEducation, IncomeFourth, IncomeFifth, IncomeFirst, IncomeSecond,\
            IncomeThird, GDP_Industry, LifeExpectancy, LiteracyAdult, LiteracyYouth, GDP_Merchandise,\
            ExpendMilitary, MobileSubs, PovertyByHealthcare, Population0_14, Population15_64, Population65,\
            PopulationDensity, PopulationGrowth, PopulationLargestCity, PopulationSlums, PopulationFemale, PopulationMale,\
            PopulationTotal, Poverty_1, Poverty_3, Poverty_NationalLine, HIV, Undernourishment,\
            Underweight, PopulationRural, GDP_Services, SurfaceArea, TaxRevenue, PopulationUrban,\
            PopulationUrbanGrowth]

worldData_df.columns = newColumns

teamData_df=worldData_df[worldData_df['Cool Name']=='Skids & Mudflap']


########################################################################################################################################
                                                            #Data Exploration
########################################################################################################################################

#Simple describe and comparison with World
print(teamData_df['ElectricityAccessTotal'].describe())
worldData_df['ElectricityAccessTotal'][worldData_df['CountryName']=='World']

#Describe + simple histogram and bar plot
print(teamData_df['GDP_AgriForFish'].describe())
print('\n')
print(worldData_df['GDP_AgriForFish'][worldData_df['CountryName']=='World'])

teamData_df['GDP_AgriForFish']

plt.bar(x=teamData_df.index, height=teamData_df['GDP_AgriForFish'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['GDP_AgriForFish'])
plt.show()

#Adding histograms for Western Europe and the Rest of the World
worldData_df['AgeDependencyTotal'][worldData_df['Cool Name']=='Jetfire'].hist()
plt.title('Western Europe')
plt.xlabel('Age Dependency Total')
plt.show()

worldData_df['AgeDependencyTotal'][worldData_df['CountryName']!='World'][worldData_df['Cool Name']!='Skids & Mudflap'].hist()
plt.title('Rest of the World')
plt.xlabel('Age Dependency Total')
plt.show()

########################################################################################################################################
                                                            #Correlation
########################################################################################################################################

#Big correlation matrix
correlationData_df=teamData_df.dropna(axis=1, thresh=1).corr().dropna(thresh=1).dropna(axis=1, thresh=1)
f = plt.figure(figsize=(19, 15))
plt.matshow(correlationData_df, fignum=f.number)
plt.xticks(range(correlationData_df.shape[1]), correlationData_df.columns, fontsize=14, rotation=90)
plt.yticks(range(correlationData_df.shape[1]), correlationData_df.columns, fontsize=14)
plt.grid(True)
cb = plt.colorbar()
cb.ax.tick_params(labelsize=14)

