########################################################################################################################################
                                                            #Import data from Excel
########################################################################################################################################

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

file='WDIW Dataset.xlsx'

worldData_df=pd.read_excel(file, index_col=0)

#CountryCode             = 'CountryCode'
CountryName             = 'CountryName'
HultRegion              = 'Hult Region'
CoolName                = 'Cool Name'
ElectricityAccessTotal  = 'ElectricityAccessTotal'
ElectricityRuralAccess  = 'ElectricityRuralAccess'
ElectricityUrbanAccess  = 'ElectricityUrbanAccess'
AdolescentFertility     = 'AdolescentFertility'
AgeDependencyTotal      = 'AgeDependencyTotal'
AgeDependencyOld        = 'AgeDependencyOld'
AgeDependencyYoung      = 'AgeDependencyYoung'
GDP_AgriForFish         = 'GDP_AgriForFish'
ArmedForces             = 'ArmedForces'
BirthRate               = 'BirthRate'
BirthSkilledStaff       = 'BirthSkilledStaff'
DeathRate               = 'DeathRate'
EducationPHD            = 'EducationPHD'
EducationBachelor       = 'EducationBachelor'
EducationMaster         = 'EducationMaster'
EducationLowerSecondary = 'EducationLowerSecondary'
EducationPostSecondary  = 'EducationPostSecondary'
EducationPrimary        = 'EducationPrimary'
EducationTertiary       = 'EducationTertiary'
EducationUpperSecondary = 'EducationUpperSecondary'
EmploymentAgriculture   = 'EmploymentAgriculture'
EmploymentIndustry      = 'EmploymentIndustry'
EmploymentServices      = 'EmploymentServices'
FertilityRate           = 'FertilityRate'
GDP                     = 'GDP'
GDPGrowth               = 'GDPGrowth'
GINI                    = 'GINI'
ExpendEducation         = 'ExpendEducation'
IncomeFourth            = 'IncomeFourth'
IncomeFifth             = 'IncomeFifth'
IncomeFirst             = 'IncomeFirst'
IncomeSecond            = 'IncomeSecond'
IncomeThird             = 'IncomeThird'
GDP_Industry            = 'GDP_Industry'
LifeExpectancy          = 'LifeExpectancy'
LiteracyAdult           = 'LiteracyAdult'
LiteracyYouth           = 'LiteracyYouth'
GDP_Merchandise         = 'GDP_Merchandise'
ExpendMilitary          = 'ExpendMilitary'
MobileSubs              = 'MobileSubs'
PovertyByHealthcare     = 'PovertyByHealthcare'
Population0_14          = 'Population0_14'
Population15_64         = 'Population15_64'
Population65            = 'Population65+'
PopulationDensity       = 'PopulationDensity'
PopulationGrowth        = 'PopulationGrowth'
PopulationLargestCity   = 'PopulationLargestCity'
PopulationSlums         = 'PopulationSlums'
PopulationFemale        = 'PopulationFemale'
PopulationMale          = 'PopulationMale'
PopulationTotal         = 'PopulationTotal'
Poverty_1               = 'Poverty_1.90'
Poverty_3               = 'Poverty_3.20'
Poverty_NationalLine    = 'Poverty_NationalLine'
HIV                     = 'HIV'
Undernourishment        = 'Undernourishment'
Underweight             = 'Underweight'
PopulationRural         = 'PopulationRural'
GDP_Services            = 'GDP_Services'
SurfaceArea             = 'SurfaceArea'
TaxRevenue              = 'TaxRevenue'
PopulationUrban         = 'PopulationUrban'
PopulationUrbanGrowth   = 'PopulationUrbanGrowth'

newColumns=[#CountryCode,
            CountryName, HultRegion, CoolName, ElectricityAccessTotal, ElectricityRuralAccess,\
            ElectricityUrbanAccess, AdolescentFertility, AgeDependencyTotal, AgeDependencyOld, AgeDependencyYoung, GDP_AgriForFish,\
            ArmedForces, BirthRate, BirthSkilledStaff, DeathRate, EducationPHD, EducationBachelor, \
            EducationMaster, EducationLowerSecondary, EducationPostSecondary, EducationPrimary, EducationTertiary, EducationUpperSecondary,\
            EmploymentAgriculture, EmploymentIndustry, EmploymentServices, FertilityRate, GDP, GDPGrowth,\
            GINI, ExpendEducation, IncomeFourth, IncomeFifth, IncomeFirst, IncomeSecond,\
            IncomeThird, GDP_Industry, LifeExpectancy, LiteracyAdult, LiteracyYouth, GDP_Merchandise,\
            ExpendMilitary, MobileSubs, PovertyByHealthcare, Population0_14, Population15_64, Population65,\
            PopulationDensity, PopulationGrowth, PopulationLargestCity, PopulationSlums, PopulationFemale, PopulationMale,\
            PopulationTotal, Poverty_1, Poverty_3, Poverty_NationalLine, HIV, Undernourishment,\
            Underweight, PopulationRural, GDP_Services, SurfaceArea, TaxRevenue, PopulationUrban,\
            PopulationUrbanGrowth]

worldData_df.columns = newColumns

teamData_df=worldData_df[worldData_df['Cool Name']=='Skids & Mudflap']


########################################################################################################################################
                                                            #Data Exploration
########################################################################################################################################

######################## FRANCISCO
#############################################################################

#ElectricityAccessTotal
print(teamData_df['ElectricityAccessTotal'].describe())

worldData_df['ElectricityAccessTotal'][worldData_df['CountryName']=='World']

#ElectricityRuralAccess
print(teamData_df['ElectricityRuralAccess'].describe())

worldData_df['ElectricityRuralAccess'][worldData_df['CountryName']=='World']

#ElectricityUrbanAccess
print(teamData_df['ElectricityUrbanAccess'].describe())

worldData_df['ElectricityUrbanAccess'][worldData_df['CountryName']=='World']

#Adolescent Fertility
print(teamData_df['AdolescentFertility'].describe())
print('\n')
print(worldData_df['AdolescentFertility'][worldData_df['CountryName']=='World'])

teamData_df.boxplot(column=['AdolescentFertility'], vert=False)
plt.show()

adolescentFertility_df=pd.DataFrame(teamData_df['AdolescentFertility'])

adolescentFertility_df.loc[['AND','XKX','SMR'],'AdolescentFertility']=0

adolescentFertility_df

sns.distplot(adolescentFertility_df['AdolescentFertility'])
plt.xlabel("AdolescentFertility")
plt.show()

plt.bar(x=teamData_df.index, height=teamData_df['AdolescentFertility'])
plt.xticks(rotation=90)
plt.show()

#Slovakia, Hungary and Albania are potential outliers
#Andorra, Kosovo and San Marino do not report
#According to wikipedia, there is little adolescent population, this could be the reason this metric is not reported
#https://en.wikipedia.org/wiki/Demographics_of_Andorra


#AgeDependencyTotal
print(teamData_df['AgeDependencyTotal'].describe())
print('\n')
print(worldData_df['AgeDependencyTotal'][worldData_df['CountryName']=='World'])

teamData_df['AgeDependencyTotal']

teamData_df.hist(column=['AgeDependencyTotal'], bins='fd')
plt.title('Eastern Europe')
plt.xlabel('Age Dependency Total')
plt.show()

worldData_df['AgeDependencyTotal'][worldData_df['Cool Name']=='Jetfire'].hist()
plt.title('Western Europe')
plt.xlabel('Age Dependency Total')
plt.show()

worldData_df['AgeDependencyTotal'][worldData_df['CountryName']!='World'][worldData_df['Cool Name']!='Skids & Mudflap'].hist()
plt.title('Rest of the World')
plt.xlabel('Age Dependency Total')
plt.show()

teamData_df.boxplot(column=['AgeDependencyTotal'])
plt.show()

#AgeDependencyOld
print(teamData_df['AgeDependencyOld'].describe())
print('\n')
print(worldData_df['AgeDependencyOld'][worldData_df['CountryName']=='World'])

teamData_df['AgeDependencyOld']

teamData_df.hist(column=['AgeDependencyOld'])
plt.title('Eastern Europe')
plt.xlabel('Age Dependency Old')
plt.show()

worldData_df['AgeDependencyOld'][worldData_df['Cool Name']=='Jetfire'].hist()
plt.title('Western Europe')
plt.xlabel('Age Dependency Old')
plt.show()

worldData_df['AgeDependencyOld'][worldData_df['CountryName']!='World'][worldData_df['Cool Name']!='Skids & Mudflap'].hist()
plt.title('Rest of the World')
plt.xlabel('Age Dependency Old')
plt.show()

teamData_df.boxplot(column=['AgeDependencyOld'])
plt.show()

#AgeDependencyYoung
print(teamData_df['AgeDependencyYoung'].describe())
print('\n')
print(worldData_df['AgeDependencyYoung'][worldData_df['CountryName']=='World'])

teamData_df['AgeDependencyYoung']

teamData_df.hist(column=['AgeDependencyYoung'])
plt.title('Eastern Europe')
plt.xlabel('Age Dependency Young')
plt.show()

worldData_df['AgeDependencyYoung'][worldData_df['Cool Name']=='Jetfire'].hist()
plt.title('Western Europe')
plt.xlabel('Age Dependency Young')
plt.show()

worldData_df['AgeDependencyYoung'][worldData_df['CountryName']!='World'][worldData_df['Cool Name']!='Skids & Mudflap'].hist()
plt.title('Rest of the World')
plt.xlabel('Age Dependency Young')
plt.show()

teamData_df.boxplot(column=['AgeDependencyYoung'])
plt.show()

#GDP_AgriForFish
print(teamData_df['GDP_AgriForFish'].describe())
print('\n')
print(worldData_df['GDP_AgriForFish'][worldData_df['CountryName']=='World'])

teamData_df['GDP_AgriForFish']

plt.bar(x=teamData_df.index, height=teamData_df['GDP_AgriForFish'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['GDP_AgriForFish'])
plt.show()

#ArmedForces
print(teamData_df['ArmedForces'].describe())
print('\n')
print(worldData_df['ArmedForces'][worldData_df['CountryName']=='World'])

#teamData_df[['CountryName','ArmedForces']]

plt.bar(x=teamData_df.index, height=teamData_df['ArmedForces'])
plt.xticks(rotation=90)

#Birth Rate
print(teamData_df['BirthRate'].describe())
print('\n')
print(worldData_df['BirthRate'][worldData_df['CountryName']=='World'])

#teamData_df[['CountryName','BirthRate']]

plt.bar(x=teamData_df.index, height=teamData_df['BirthRate'])
plt.xticks(rotation=90)
plt.show()

#DeathRate
print(teamData_df['DeathRate'].describe())
print('\n')
print(worldData_df['DeathRate'][worldData_df['CountryName']=='World'])

teamData_df['DeathRate']

plt.bar(x=teamData_df.index, height=teamData_df['DeathRate'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['DeathRate'], bins='sturges')
plt.show()
plt.show()
#Greece and Macedonia are outliers

######################## EVGENII
#############################################################################
#Describe + simple histogram and bar plot/ PopulationTotal
print(teamData_df['PopulationTotal'].describe())
print('\n')
print(worldData_df['PopulationTotal'][worldData_df['CountryName']=='World'])

teamData_df['PopulationTotal']

plt.bar(x=teamData_df.index, height=teamData_df['PopulationTotal'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['PopulationTotal'])
plt.show()

#Describe + simple histogram and bar plot/ MaleProportion

maleProportion_df['MaleProportion']=pd.DataFrame(teamData_df['PopulationMale']/teamData_df['PopulationTotal'])

print(maleProportion_df)

print(teamData_df['PopulationMale'].describe())
print('\n')
print(worldData_df['PopulationMale'][worldData_df['CountryName']=='World'])

teamData_df['PopulationMale']

plt.bar(x=teamData_df.index, height=maleProportion_df['MaleProportion'])
plt.xticks(rotation=90)
plt.show()

maleProportion_df.hist(column=['MaleProportion'])
plt.show()

#Describe + simple histogram and bar plot / PopulationSlums
print(teamData_df['PopulationSlums'].describe())
print('\n')
print(worldData_df['PopulationSlums'][worldData_df['CountryName']=='World'])

teamData_df['PopulationSlums']

plt.bar(x=teamData_df.index, height=teamData_df['PopulationSlums'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['PopulationSlums'])
plt.show()

#Describe + simple histogram and bar plot / PopulationLargestCity
print(teamData_df['PopulationLargestCity'].describe())
print('\n')
print(worldData_df['PopulationLargestCity'][worldData_df['CountryName']=='World'])

teamData_df['PopulationLargestCity']

plt.bar(x=teamData_df.index, height=teamData_df['PopulationLargestCity'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['PopulationLargestCity'])
plt.show()

######################## MONIKA
#############################################################################
########################################################################################################################################
                                                            #Data Exploration
########################################################################################################################################


#Describe + simple histogram and bar plot
print(teamDataCleaned_df['EmploymentAgriculture'].describe())
print('\n')
print(worldData_df['EmploymentAgriculture'][worldData_df['EmploymentAgriculture']=='World'])

EmploymentAgriculture_median = teamDataCleaned_df['EmploymentAgriculture'].median()
teamDataCleaned_df[['EmploymentAgriculture']] = teamDataCleaned_df[['EmploymentAgriculture']].fillna(EmploymentAgriculture_median)

teamDataCleaned_df['EmploymentAgriculture']

plt.bar(x=teamDataCleaned_df.index, height=teamDataCleaned_df['EmploymentAgriculture'])
plt.xticks(rotation=90)
plt.show()

teamDataCleaned_df.hist(column=['EmploymentAgriculture'])
plt.show()

#Adding histograms for Western Europe and the Rest of the World
worldData_df['EmploymentAgriculture'][worldData_df['Cool Name']=='Jetfire'].hist()
plt.title('Western Europe')
plt.xlabel('EmploymentAgriculture')
plt.show()

worldData_df['EmploymentAgriculture'][worldData_df['CountryName']!='World'][worldData_df['Cool Name']!='Skids & Mudflap'].hist()
plt.title('Rest of the World')
plt.xlabel('EmploymentAgriculture')
plt.show()

########################################################################################################################################
                                                            #EmploymnetIndustry
########################################################################################################################################


#Describe + simple histogram and bar plot
print(teamDataCleaned_df['EmploymentIndustry'].describe())
print('\n')
print(worldData_df['EmploymentIndustry'][worldData_df['EmploymentIndustry']=='World'])

teamDataCleaned_df['EmploymentIndustry']

EmploymentIndustry_median = teamDataCleaned_df['EmploymentIndustry'].median()
teamDataCleaned_df[['EmploymentIndustry']] = teamDataCleaned_df[['EmploymentIndustry']].fillna(EmploymentIndustry_median)

plt.bar(x=teamDataCleaned_df.index, height=teamDataCleaned_df['EmploymentIndustry'])
plt.xticks(rotation=90)
plt.show()

teamDataCleaned_df.hist(column=['EmploymentIndustry'])
plt.show()

#Adding histograms for Western Europe and the Rest of the World
worldData_df['EmploymentIndustry'][worldData_df['Cool Name']=='Jetfire'].hist()
plt.title('Western Europe')
plt.xlabel('EmploymentIndustry')
plt.show()

worldData_df['EmploymentIndustry'][worldData_df['CountryName']!='World'][worldData_df['Cool Name']!='Skids & Mudflap'].hist()
plt.title('Rest of the World')
plt.xlabel('EmploymentIndustry')
plt.show()

########################################################################################################################################
                                                            #EmploymentServices
########################################################################################################################################


#Describe + simple histogram and bar plot
print(teamDataCleaned_df['EmploymentServices'].describe())
print('\n')
print(worldData_df['EmploymentServices'][worldData_df['EmploymentServices']=='World'])

EmploymentServices_median = teamDataCleaned_df['EmploymentServices'].median()
teamDataCleaned_df[['EmploymentServices']] = teamDataCleaned_df[['EmploymentServices']].fillna(EmploymentServices_median)

teamDataCleaned_df['EmploymentServices']

plt.bar(x=teamDataCleaned_df.index, height=teamDataCleaned_df['EmploymentServices'])
plt.xticks(rotation=90)
plt.show()

teamDataCleaned_df.hist(column=['EmploymentServices'])
plt.show()

#Adding histograms for Western Europe and the Rest of the World
worldData_df['EmploymentServices'][worldData_df['Cool Name']=='Jetfire'].hist()
plt.title('Western Europe')
plt.xlabel('EmploymentServices')
plt.show()

worldData_df['EmploymentServices'][worldData_df['CountryName']!='World'][worldData_df['Cool Name']!='Skids & Mudflap'].hist()
plt.title('Rest of the World')
plt.xlabel('EmploymentServices')
plt.show()

########################################################################################################################################
                                                            #FertilityRate 
########################################################################################################################################


#Describe + simple histogram and bar plot
print(teamDataCleaned_df['FertilityRate'].describe())
print('\n')
print(worldData_df['FertilityRate'][worldData_df['FertilityRate']=='World'])

teamDataCleaned_df['FertilityRate']

plt.bar(x=teamDataCleaned_df.index, height=teamDataCleaned_df['FertilityRate'])
plt.xticks(rotation=90)
plt.show()

teamDataCleaned_df.hist(column=['FertilityRate'])
plt.show()

#Adding histograms for Western Europe and the Rest of the World
worldData_df['FertilityRate'][worldData_df['Cool Name']=='Jetfire'].hist()
plt.title('Western Europe')
plt.xlabel('FertilityRate')
plt.show()

worldData_df['FertilityRate'][worldData_df['CountryName']!='World'][worldData_df['Cool Name']!='Skids & Mudflap'].hist()
plt.title('Rest of the World')
plt.xlabel('FertilityRate')
plt.show()

########################################################################################################################################
                                                            #GDP
########################################################################################################################################


#Describe + simple histogram and bar plot
print(teamDataCleaned_df['GDP'].describe())
print('\n')
print(worldData_df['GDP'][worldData_df['CountryName']=='World'])

teamData_df['GDP']

plt.bar(x=teamDataCleaned_df.index, height=teamDataCleaned_df['GDP'])
plt.xticks(rotation=90)
plt.show()

teamDataCleaned_df.hist(column=['GDP'])
plt.show()

#Adding histograms for Western Europe and the Rest of the World
worldData_df['GDP'][worldData_df['Cool Name']=='Jetfire'].hist()
plt.title('Western Europe')
plt.xlabel('GDP')
plt.show()

worldData_df['GDP'][worldData_df['CountryName']!='World'][worldData_df['Cool Name']!='Skids & Mudflap'].hist()
plt.title('Rest of the World')
plt.xlabel('GDP')
plt.show()

########################################################################################################################################
                                                            #GDPGrowth
########################################################################################################################################


#Describe + simple histogram and bar plot
print(teamData_df['GDPGrowth'].describe())
print('\n')
print(worldData_df['GDPGrowth'][worldData_df['CountryName']=='World'])

teamData_df['GDPGrowth']

plt.bar(x=teamData_df.index, height=teamData_df['GDPGrowth'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['GDPGrowth'])
plt.show()

#Adding histograms for Western Europe and the Rest of the World
worldData_df['GDPGrowth'][worldData_df['Cool Name']=='Jetfire'].hist()
plt.title('Western Europe')
plt.xlabel('GDPGrowth')
plt.show()

worldData_df['GDPGrowth'][worldData_df['CountryName']!='World'][worldData_df['Cool Name']!='Skids & Mudflap'].hist()
plt.title('Rest of the World')
plt.xlabel('GDPGrowth')
plt.show()


########################################################################################################################################
                                                            #GINI
########################################################################################################################################


#Describe + simple histogram and bar plot
print(teamDataCleaned_df['GINI'].describe())
print('\n')
print(worldData_df['GINI'][worldData_df['GINI']=='World'])

teamDataCleaned_df['GINI']

plt.bar(x=teamDataCleaned_df.index, height=teamDataCleaned_df['GINI'])
plt.xticks(rotation=90)
plt.show()

teamDataCleaned_df.hist(column=['GINI'])
plt.show()


#Adding histograms for Western Europe and the Rest of the World
worldData_df['GINI'][worldData_df['Cool Name']=='Jetfire'].hist()
plt.title('Western Europe')
plt.xlabel('GINI')
plt.show()

worldData_df['GINI'][worldData_df['CountryName']!='World'][worldData_df['Cool Name']!='Skids & Mudflap'].hist()
plt.title('Rest of the World')
plt.xlabel('GINI')
plt.show()

########################################################################################################################################
                                                            #GDP_Services
########################################################################################################################################

#Describe + simple histogram and bar plot
print(teamDataCleaned_df['GDP_Services'].describe())
print('\n')
print(worldData_df['GDP_Services'][worldData_df['GDP_Services']=='World'])

teamDataCleaned_df['GDP_Services']

teamDataCleaned_df.loc['POL','GDP_Services']= 58.302

plt.bar(x=teamDataCleaned_df.index, height=teamDataCleaned_df['GDP_Services'])
plt.xticks(rotation=90)
plt.show()

teamDataCleaned_df.hist(column=['GDP_Services'])
plt.show()




######################## ARJUN
#############################################################################
#Describe + simple histogram and bar plot
print(teamData_df['IncomeFourth'].describe())
print('\n')
print(worldData_df['IncomeFourth'][worldData_df['CountryName']=='World'])

teamData_df['IncomeFourth']

plt.bar(x=teamData_df.index, height=teamData_df['IncomeFourth'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['IncomeFourth'])
plt.show()

#Describe + simple histogram and bar plot
print(teamData_df['IncomeFifth'].describe())
print('\n')
print(worldData_df['IncomeFifth'][worldData_df['CountryName']=='World'])

teamData_df['IncomeFifth']

plt.bar(x=teamData_df.index, height=teamData_df['IncomeFifth'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['IncomeFifth'])
plt.show()

#Describe + simple histogram and bar plot
print(teamData_df['IncomeFirst'].describe())
print('\n')
print(worldData_df['IncomeFirst'][worldData_df['CountryName']=='World'])

teamData_df['IncomeFirst']

plt.bar(x=teamData_df.index, height=teamData_df['IncomeFirst'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['IncomeFirst'])
plt.show()

#Describe + simple histogram and bar plot
print(teamData_df['IncomeSecond'].describe())
print('\n')
print(worldData_df['IncomeSecond'][worldData_df['CountryName']=='World'])

teamData_df['IncomeSecond']

plt.bar(x=teamData_df.index, height=teamData_df['IncomeSecond'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['IncomeSecond'])
plt.show()


#Describe + simple histogram and bar plot
print(teamData_df['IncomeThird'].describe())
print('\n')
print(worldData_df['IncomeThird'][worldData_df['CountryName']=='World'])

teamData_df['IncomeThird']

plt.bar(x=teamData_df.index, height=teamData_df['IncomeThird'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['IncomeThird'])
plt.show()

#Describe + simple histogram and bar plot
print(teamData_df['GDP_Industry'].describe())
print('\n')
print(worldData_df['GDP_Industry'][worldData_df['CountryName']=='World'])

teamData_df['GDP_Industry']

plt.bar(x=teamData_df.index, height=teamData_df['GDP_Industry'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['GDP_Industry'])
plt.show()

#Describe + simple histogram and bar plot
print(teamData_df['LifeExpectancy'].describe())
print('\n')
print(worldData_df['LifeExpectancy'][worldData_df['CountryName']=='World'])

teamData_df['LifeExpectancy']

plt.bar(x=teamData_df.index, height=teamData_df['LifeExpectancy'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['LifeExpectancy'])
plt.show()

#Describe + simple histogram and bar plot
print(teamData_df['LiteracyAdult'].describe())
print('\n')
print(worldData_df['LiteracyAdult'][worldData_df['CountryName']=='World'])

teamData_df['LiteracyAdult']

plt.bar(x=teamData_df.index, height=teamData_df['LiteracyAdult'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['LiteracyAdult'])
plt.show()

#Describe + simple histogram and bar plot
print(teamData_df['LiteracyYouth'].describe())
print('\n')
print(worldData_df['LiteracyYouth'][worldData_df['CountryName']=='World'])

teamData_df['LiteracyYouth']

plt.bar(x=teamData_df.index, height=teamData_df['LiteracyYouth'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['LiteracyYouth'])
plt.show()

#Describe + simple histogram and bar plot
print(teamData_df['GDP_Merchandise'].describe())
print('\n')
print(worldData_df['GDP_Merchandise'][worldData_df['CountryName']=='World'])

teamData_df['GDP_Merchandise']

plt.bar(x=teamData_df.index, height=teamData_df['GDP_Merchandise'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['GDP_Merchandise'])
plt.show()

#Describe + simple histogram and bar plot
print(teamData_df['ExpendMilitary'].describe())
print('\n')
print(worldData_df['ExpendMilitary'][worldData_df['CountryName']=='World'])

teamData_df['ExpendMilitary']

plt.bar(x=teamData_df.index, height=teamData_df['ExpendMilitary'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['ExpendMilitary'])
plt.show()

#Describe + simple histogram and bar plot
print(teamData_df['MobileSubs'].describe())
print('\n')
print(worldData_df['MobileSubs'][worldData_df['CountryName']=='World'])

teamData_df['MobileSubs']

plt.bar(x=teamData_df.index, height=teamData_df['MobileSubs'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['MobileSubs'])
plt.show()

#Describe + simple histogram and bar plot
print(teamData_df['PovertyByHealthcare'].describe())
print('\n')
print(worldData_df['PovertyByHealthcare'][worldData_df['CountryName']=='World'])

teamData_df['PovertyByHealthcare']

plt.bar(x=teamData_df.index, height=teamData_df['PovertyByHealthcare'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['PovertyByHealthcare'])
plt.show()

########################YINZE
#############################################################################
#PopulationGrowth
print(teamData_df['PopulationGrowth'].describe())
print('\n')
print(worldData_df['PopulationGrowth'][worldData_df['CountryName']=='World'])

teamData_df['PopulationGrowth']

plt.bar(x=teamData_df.index, height=teamData_df['PopulationGrowth'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['PopulationGrowth'])
plt.show()



#PopulationDensity
print(teamData_df['PopulationDensity'].describe())
print('\n')
print(worldData_df['PopulationDensity'][worldData_df['CountryName']=='World'])

teamData_df['PopulationDensity']

plt.bar(x=teamData_df.index, height=teamData_df['PopulationDensity'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['PopulationDensity'])
plt.show()


#Population65+
print(teamData_df['Population65+'].describe())
print('\n')
print(worldData_df['Population65+'][worldData_df['CountryName']=='World'])

teamData_df['Population65+']

plt.bar(x=teamData_df.index, height=teamData_df['Population65+'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['Population65+'])
plt.show()


#Population15_64
print(teamData_df['Population15_64'].describe())
print('\n')
print(worldData_df['Population15_64'][worldData_df['CountryName']=='World'])

teamData_df['Population15_64']

plt.bar(x=teamData_df.index, height=teamData_df['Population15_64'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['Population15_64'])
plt.show()


#Population0_14
print(teamData_df['Population0_14'].describe())
print('\n')
print(worldData_df['Population0_14'][worldData_df['CountryName']=='World'])

teamData_df['Population0_14']

plt.bar(x=teamData_df.index, height=teamData_df['Population0_14'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['Population0_14'])
plt.show()


######################## JULIA 
#############################################################################
#Describe + simple histogram and bar plot
print(teamData_df['HIV'].describe())
print('\n')
print(worldData_df['HIV'][worldData_df['CountryName']=='World'])

teamData_df['HIV']

plt.bar(x=teamData_df.index, height=teamData_df['HIV'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['HIV'])
plt.show()


#Describe + simple histogram and bar plot
print(teamData_df['Undernourishment'].describe())
print('\n')
print(worldData_df['Undernourishment'][worldData_df['CountryName']=='World'])

teamData_df['Undernourishment']

plt.bar(x=teamData_df.index, height=teamData_df['Undernourishment'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['Undernourishment'])
plt.show()


#Describe + simple histogram and bar plot
print(teamData_df['PopulationRural'].describe())
print('\n')
print(worldData_df['PopulationRural'][worldData_df['CountryName']=='World'])

teamData_df['PopulationRural']

plt.bar(x=teamData_df.index, height=teamData_df['PopulationRural'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['PopulationRural'])
plt.show()


#Describe + simple histogram and bar plot
print(teamData_df['GDP_Services'].describe())
print('\n')
print(worldData_df['GDP_Services'][worldData_df['CountryName']=='World'])

teamData_df['GDP_Services']

plt.bar(x=teamData_df.index, height=teamData_df['GDP_Services'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['GDP_Services'])
plt.show()


#Describe + simple histogram and bar plot
print(teamData_df['SurfaceArea'].describe())
print('\n')
print(worldData_df['SurfaceArea'][worldData_df['CountryName']=='World'])

teamData_df['SurfaceArea']

plt.bar(x=teamData_df.index, height=teamData_df['SurfaceArea'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['SurfaceArea'])
plt.show()


#Describe + simple histogram and bar plot
print(teamData_df['TaxRevenue'].describe())
print('\n')
print(worldData_df['TaxRevenue'][worldData_df['CountryName']=='World'])

teamData_df['TaxRevenue']

plt.bar(x=teamData_df.index, height=teamData_df['TaxRevenue'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['TaxRevenue'])
plt.show()



#Describe + simple histogram and bar plot
print(teamData_df['PopulationUrban'].describe())
print('\n')
print(worldData_df['PopulationUrban'][worldData_df['CountryName']=='World'])

teamData_df['PopulationUrban']

plt.bar(x=teamData_df.index, height=teamData_df['PopulationUrban'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['PopulationUrban'])
plt.show()


#Describe + simple histogram and bar plot
print(teamData_df['PopulationUrbanGrowth'].describe())
print('\n')
print(worldData_df['PopulationUrbanGrowth'][worldData_df['CountryName']=='World'])

teamData_df['PopulationUrbanGrowth']

plt.bar(x=teamData_df.index, height=teamData_df['PopulationUrbanGrowth'])
plt.xticks(rotation=90)
plt.show()

teamData_df.hist(column=['PopulationUrbanGrowth'])
plt.show()

########################################################################################################################################
                                                            #Correlation
########################################################################################################################################

#Big correlation matrix
correlationData_df=teamData_df.dropna(axis=1, thresh=1).corr().dropna(thresh=1).dropna(axis=1, thresh=1)
f = plt.figure(figsize=(19, 15))
plt.matshow(correlationData_df, fignum=f.number)
plt.xticks(range(correlationData_df.shape[1]), correlationData_df.columns, fontsize=14, rotation=90)
plt.yticks(range(correlationData_df.shape[1]), correlationData_df.columns, fontsize=14)
plt.grid(True)
cb = plt.colorbar()
cb.ax.tick_params(labelsize=14)
